# -*- mode: org -*-
#+SEQ_TODO:  TODO | DONE MAYBE
#+CATEGORY: org-plot
IDEAS/TODO:

* Tasks

** DONE org-table to lisp
   :PROPERTIES:
   :suggested-by: Stephan Schmitt
   :END:
use

Eric, did you know that Carsten provided a function called 
org-table-to-lisp in org-6.06b?  I think with this you can 
refactor your code to be more modular and thus better 
maintainable and extensible.

** DONE 3d plotting

** DONE when ind column is text, use as labels
can be done by adding parameters (xlabels, and ylabels)

using xticlabels(ind)

** MAYBE automatic bin size for histograms
   :PROPERTIES:
   :suggested-by: Samuel Wales
   :END:

1.  For a selected column, it can be nice to draw a histogram.  Long
ago, I developed the following formula for choosing a bin size.  Seems
to work.

        5*(max-min)/n

You can use something like bin*round*($1 * (1.0/bin)) to bin.  Note
that cl-extra.el's (round*) might be more consistent and
mathematically vetted than (round) (though you might not be allowed to
use cl-extra.el).
** MAYBE add plot links
   :PROPERTIES:
   :suggested-by: Carsten Dominik
   :END:
something like

[[plot:table]]

not sure what the part following the : should contain, possibly
options

maybe rather than a plot it should look more like the latex in org
format?? $ $

** TODO support for plotting formulas
gnuplot has capabilities for plotting formulas, this would make sense
as the contents of a =[plot: ]= style link

maybe something like

=[splot:sin(sqrt(x**2+y**2))/sqrt(x**2+y**2)]=

which could read options from a =#+PLOT= line in the same way as
plotting tables...

** TODO automatic descriptive statistics with plot
   :PROPERTIES:
   :suggested-by: Samuel Wales
   :END:

2.  It might be nice to show descriptive statistics (I would show
mean, median, geometric mean, standard deviation, min, max, range)
somewhere while showing the plot, if you don't already do this.
** TODO re-graph all graphs when publishing
important sub-problem is how to cycle through all graphs, especially
cycling through and re-graphing all graphs in a subtree, like the
latex image command. (maybe even displaying the graph over the plot
link.

[Carsten] To call a function at each table, you can use
org-table-map-tables, defined in org.el.

** TODO sources of data to plot [1/4]
plotting functions should work with any list of data, not just
tables... would probably want to plot from...
- [X] tables
- [ ] elisp lists
- [ ] results of property searches (can be saved in tables)
- [ ] comma/tab seperated strings
** TODO add reading of parameters from elsewhere in the org-file
Currently reading from adjacent =#+PLOT= lines, but would also like to
read from the current subtree, or even global to the file

*** DONE comment lines
I can see good ways to specify parameters for a plot that would be quite
consistent with how Org deals with such things in similar situations.

1. A special comment line in the buffer, directly before the table, like

#+PLOT: table-to-gnuplot :xcol 1 :ycols (2 4 5 6) :title "Some string"

or

#+PLOT: table-to-R :script "/path/to/script"

The command can read these by macthing

(if (looking-at "#+PLOT: +\\([^ \t\r\n]+\\)\\( +.*\\)?")
     (let* ((func (intern (match-string 1)))
	   (params-plist
	    (if (match-end 2)
		(read (concat "(" (match-string 2 format) ")")))))

2. Use inherited properties to specify plotting parameters in a tree.

*** header properties
would like to jump up to header sub-trees to find plotting options if
none specified on near the table/link

** TODO remove dependency on gnuplot-mode.el
This shouldn't be hard to do, just sent to compilation buffer if
gnuplot-mode is not available.  This is proving difficult

(defun org-plot-gnuplot-comint ()
  "Drop the gnuplot-script buffer to gnuplot holding the
connection open so that plot windows will remain open."
  (let ((gnuplot-delay .1))
    (apply 'make-comint "gnuplot" '("gnuplot"))
    (save-excursion
      (set-buffer "*gnuplot*")
      (set-marker (process-mark (get-process "gnuplot")) (point-marker))
      (sleep-for (* 20 gnuplot-delay))
      (let ((script (buffer-substring (point-min) (point-max))))
	(org-plot-gnuplot-send-input)
	(mapcar (lambda (line)
		  (insert line)
		  (comint-send-input)
		  (sleep-for gnuplot-delay)
		  (goto-char (point-max)))
		(split-string script "\n" t))))))
 
** TODO bugs [7/8]
Thanks to the org-mode mailing list for reporting problems

- [X] after plotting 3d or grid data, sometime have to call the
      plotting command twice before the before a graph is generated
- [X] parentheses inside of quotes for title break the regexp,
      similarly "'s inside of ()'s will probably be a problem for
      specifying labels
- [ ] Got a "current buffer has no process" when tried from Windows
      Native GNU Emacs 22.2.1
- [X] can wander too far and read options from nearby graphs
- [X] sometimes graphs just don't work, many times saving the org-file
      and then re-graphing will fix this
- [X] changing the buffer
- [X] finding the table to plot
- [X] columns with multi-word text

*** changing the buffer
this already happens whenever tab is pressed in a table.

*** DONE [2008-08-28 Thu] Finding the table to plot
      :PROPERTIES:
      :suggested-by: William Henney
      :END:
      =org-plot/goto-nearest-table= searches backward first, which means
      that if point is located in an options line for a following table,
      then it will find the previous table instead. This is usually
      undesired.

*** DONE [2008-08-28 Thu] Columns with multi-word text
    :PROPERTIES:
    :suggested-by: William Henney
    :END:
    Consider the following table:

    now quoting non-numeric columns (see [[file:org-plot.el::defun%20org%20plot%20quote%20tsv%20field%20s][quote-tsv]])

#+PLOT: title:"Citas" ind:1 deps:(3) type:2d with:histograms set:"yrange [0:]"
    | Sede      | Max cites | H-index |
    |-----------+-----------+---------|
    | Chile     |    257.72 |   21.39 |
    | Leeds     |    165.77 |   19.68 |
    | S찾o Paolo |     71.00 |   11.50 |
    | Stockholm |    134.19 |   14.33 |
    | Morelia   |    257.56 |   17.67 |

    In theory, this should plot the third column. However, the data
    point for S찾o Paolo comes from the second column
    instead. Presumably this is because of the embedded space in "S천o
    Paolo". If I replace it with a unicode non-breaking space,
    "S찾o Paolo", then it works correctly.

